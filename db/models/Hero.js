const Stats = require('./Stat');

class Hero {
  constructor({ boomerang, playerName = 'Player' }) {
    this.skin = 'ü§†';
    this.position = 0;
    this.boomerang = boomerang;
    this.playerName = playerName;
    this.stats = {
      score: 0,
      kills: 0,
      moves: 0,
    };
    console.log(`–ù–æ–≤—ã–π –∏–≥—Ä–æ–∫: ${this.playerName}`);
  }

  async saveStats() {
    try {
      const stat = await Stats.create({
        player: this.playerName,
        score: this.stats.score,
        kills: this.stats.kills,
        moves: this.stats.moves,
      });
    } catch (error) {
      throw error;
    }
  }

  moveLeft() {
    this.position -= 1;
    this.stats.moves++;
  }

  moveRight() {
    this.position += 1;
    this.stats.moves++;
  }
  moveDown() {
    this.position += 143;
    this.stats.moves++;
  }
  moveUp() {
    this.position -= 143;
    this.stats.moves++;
  }
  attack() {
    this.boomerang.position = this.position + 1;
  }

  enemyKilled() {
    this.stats.kills++;
    this.stats.score += 100;
  }

  showStats() {
    console.log('\n=== –°–¢–ê–¢–ò–°–¢–ò–ö–ê ===');
    console.log(`–ò–≥—Ä–æ–∫: ${this.playerName}`);
    console.log(`–û—á–∫–∏: ${this.stats.score}`);
    console.log(`–£–±–∏—Ç–æ: ${this.stats.kills}`);
    console.log(`–®–∞–≥–æ–≤: ${this.stats.moves}`);
  }

  async die() {
    this.skin = 'üíÄ';

    try {
      await this.saveStats();
      this.showStats();
    } catch (error) {
      console.log('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', error.message);
    }

    process.exit(0);
  }
}

module.exports = Hero;
