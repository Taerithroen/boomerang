const Stats = require('./models/Stats');

class Hero {
  constructor({ boomerang }) {
    this.skin = 'ü§†';
    this.position = 0;
    this.boomerang = boomerang;
    this.playerName = playerName;
    this.stats = {
      score: 0,
      kills: 0,
      moves: 0,
    };
    this.loadStats();
  }
 async loadStats() {
    try {
      const stats = await Stats.findOne({ where: { player: this.playerName } });
      if (stats) {
        this.stats = stats;
        console.log(`–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: ${this.stats.score} –æ—á–∫–æ–≤`);
      }
    } catch (error) {
      console.log('–û—à–∏–±–û—á–∫–∞');
    }
  }

  async saveStats() {
    try {
      await Stats.upsert({
        player: this.playerName,
        score: this.stats.score,
        kills: this.stats.kills,
        moves: this.stats.moves
      });
    } catch (error) {
      console.log('–ù–µ —Å–æ—Ö—Ä–∞–Ω–∏–ª–æ—Å—å', error);
    }
  }
  moveLeft() {
    // –ò–¥—ë–º –≤–ª–µ–≤–æ.
    this.position -= 1;
     this.saveStats();
  }

  moveRight() {
    // –ò–¥—ë–º –≤–ø—Ä–∞–≤–æ.
    this.position += 1;
     this.saveStats();
  }
    moveDown() {
    // –ò–¥—ë–º –≤–ø—Ä–∞–≤–æ.
    this.position += 143;
  }
      moveUp() {
    // –ò–¥—ë–º –≤–ø—Ä–∞–≤–æ.
    this.position -= 143;
  }

  attack() {
    // –ê—Ç–∞–∫—É–µ–º.
    this.boomerang.position = this.position + 1;
     this.saveStats();
  }
addKill() {
    this.stats.kills++;
    this.stats.score += 100;
    console.log(`–í—Ä–∞–≥ —É–ª–µ—Ç–µ–ª –Ω–∞ –ø–æ–≤—Ç–æ—Ä! –û—á–∫–∏: ${this.stats.score}`);
    this.saveStats();
  }

  async die() {
    this.skin = 'üíÄ';
    console.log('YOU ARE DEAD!üíÄ');
    console.log('\n=== –°–¢–ê–¢–ò–°–¢–ò–ö–ê ===');
    console.log(`–û—á–∫–∏: ${this.stats.score}`);
    console.log(`–£–±–∏—Ç–æ: ${this.stats.kills}`);
    console.log(`–®–∞–≥–æ–≤: ${this.stats.moves}`);
    
    await this.saveStats();
    process.exit();
  }
}

module.exports = Hero;
